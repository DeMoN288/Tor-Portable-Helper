# –§–∞–π–ª: tor_app.py (–§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è v5.6)
# –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/Verity-Freedom/Tor-Portable

import sys
import subprocess
import os
import customtkinter as ctk
import requests
import zipfile
import threading
import ctypes
import webbrowser
from PIL import Image
import tkinter.filedialog as filedialog

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
try:
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
except NameError:
    BASE_DIR = os.path.dirname(os.path.abspath(sys.argv[0]))

# –ü–∞–ø–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
INSTALL_DIR = os.path.join(BASE_DIR, "TorPortable")

IPNS_URL = "https://ipfs.io/ipns/k51qzi5uqu5dldod6robuflgitvj276br0xye3adipm3kc0bh17hfiv1e0hnp4/"
DOWNLOAD_URLS = {
    "antidetect": IPNS_URL + "AntiTor_win8+AntiDetect_current.zip",
    "standard": IPNS_URL + "AntiTor_win8+_current.zip",
}
PSIPHON_URL = "https://github.com/Verity-Freedom/Tor-Portable/releases/tag/v1.0"
ZERO_OMEGA_CONFIG_URL = IPNS_URL + "ZeroOmegaOptions-RU.bak"
CHROME_ZEROOMEGA_URL = "https://chromewebstore.google.com/detail/proxy-switchyomega-3-zero/pfnededegaaopdmhkdmcofjmoldfiped"
FIREFOX_ZEROOMEGA_URL = "https://addons.mozilla.org/en-US/firefox/addon/zeroomega/"
WEBRTC_CONTROL_URL = "https://chromewebstore.google.com/detail/webrtc-control/fjkmabmdepjfammlpliljpnbhleegehm"

# –ü—É—Ç–∏ –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏
LAUNCH_SCRIPT = ""
SERVICE_MANAGER = ""
CHANGE_MODE = ""
UPDATER = ""
DISCORD_PATCHER = ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
ctk.set_appearance_mode("Dark")
ctk.set_default_color_theme("blue")


class App(ctk.CTk):
    def __init__(self):
        super().__init__()
        self.title("Tor Portable Helper v5.6")
        self.geometry("850x750")
        self.minsize(800, 700)
        self.grid_columnconfigure(0, weight=1)
        self.grid_rowconfigure(0, weight=1)

        # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—É—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        self.install_dir = INSTALL_DIR
        self.update_paths()

        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        self.tab_view = ctk.CTkTabview(self, anchor="w")
        self.tab_view.grid(row=0, column=0, padx=20, pady=20, sticky="nsew")

        self.tab_view.add("1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –ó–∞–ø—É—Å–∫")
        self.tab_view.add("2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë—Ä–∞—É–∑–µ—Ä–∞")
        self.tab_view.add("3. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
        self.tab_view.add("4. –¢–µ—Å—Ç-–¥—Ä–∞–π–≤")
        self.tab_view.add("–ü–æ–º–æ—â—å –∏ –°—Å—ã–ª–∫–∏")

        self.create_main_tab()
        self.create_setup_tab()
        self.create_tools_tab()
        self.create_test_tab()
        self.create_help_tab()

        self.check_installation()

    def update_paths(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
        global LAUNCH_SCRIPT, SERVICE_MANAGER, CHANGE_MODE, UPDATER, DISCORD_PATCHER
        LAUNCH_SCRIPT = os.path.join(self.install_dir, "AntiTor.cmd")
        SERVICE_MANAGER = os.path.join(self.install_dir, "service-manager.cmd")
        CHANGE_MODE = os.path.join(self.install_dir, "change-mode.cmd")

        # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∞–ø–¥–µ–π—Ç–µ—Ä —Ä–∞–∑—Ä–∞–±–∞
        UPDATER = os.path.join(self.install_dir, "updater-win10+.cmd")

        DISCORD_PATCHER = os.path.join(
            self.install_dir, "discord-drover", "drover.exe")

    def log(self, message):
        self.log_textbox.configure(state="normal")
        self.log_textbox.insert("end", f"- {message}\n")
        self.log_textbox.configure(state="disabled")
        self.log_textbox.see("end")

    def choose_install_directory(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
        directory = filedialog.askdirectory(
            title="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Tor Portable",
            initialdir=BASE_DIR
        )

        if directory:
            self.install_dir = directory
            self.update_paths()
            self.install_dir_label.configure(
                text=f"üìÅ –í—ã–±—Ä–∞–Ω–æ: {self.install_dir}")
            self.log(f"–í—ã–±—Ä–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {self.install_dir}")
            self.check_installation()
            return True
        return False

    def select_existing_installation(self):
        """–í—ã–±–æ—Ä —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Tor Portable"""
        directory = filedialog.askdirectory(
            title="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º Tor Portable (–≥–¥–µ –ª–µ–∂–∏—Ç AntiTor.cmd)",
            initialdir="C:\\")

        if directory:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ AntiTor.cmd
            if os.path.exists(os.path.join(directory, "AntiTor.cmd")):
                self.install_dir = directory
                self.update_paths()
                self.install_dir_label.configure(
                    text=f"üìÅ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: {self.install_dir}")
                self.log(
                    f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤: {self.install_dir}")
                self.check_installation()
                return True
            else:
                self.log("‚ùå –í –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω AntiTor.cmd")
                return False
        return False

    def check_installation(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Tor Portable"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        has_launch = os.path.exists(LAUNCH_SCRIPT)
        has_updater = os.path.exists(UPDATER)

        if has_launch:
            self.status_label.configure(
                text="‚úÖ Tor Portable –Ω–∞–π–¥–µ–Ω!",
                text_color="lightgreen")
            self.log(f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤: {self.install_dir}")
            self.download_button.configure(
                state="normal", text="–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
            self.service_manager_button.configure(state="normal")
            self.launch_browser_button.configure(state="normal")
            self.open_folder_button.configure(state="normal")

            # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∞–ø–¥–µ–π—Ç–µ—Ä
            self.update_button.configure(
                state="normal" if has_updater else "disabled")

            self.mode_button.configure(state="normal")
            self.discord_button.configure(
                state="normal" if os.path.exists(DISCORD_PATCHER) else "disabled")

            if not has_updater:
                self.log("‚ö†Ô∏è –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (updater-win10+.cmd) –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            self.status_label.configure(
                text="‚ùå Tor Portable –Ω–µ –Ω–∞–π–¥–µ–Ω",
                text_color="orange")
            self.log(f"Tor Portable –Ω–µ –Ω–∞–π–¥–µ–Ω –≤: {self.install_dir}")
            self.download_button.configure(
                state="normal", text="–°–∫–∞—á–∞—Ç—å –∏ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
            self.service_manager_button.configure(state="disabled")
            self.launch_browser_button.configure(state="disabled")
            self.open_folder_button.configure(state="disabled")
            self.update_button.configure(state="disabled")
            self.mode_button.configure(state="disabled")
            self.discord_button.configure(state="disabled")

    def open_download_dialog(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –≤–µ—Ä—Å–∏–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
        dialog = ctk.CTkToplevel(self)
        dialog.title("–í—ã–±–æ—Ä –≤–µ—Ä—Å–∏–∏")
        dialog.geometry("550x350")
        dialog.resizable(False, False)
        dialog.grab_set()
        dialog.transient(self)

        ctk.CTkLabel(dialog, text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è",
                     font=ctk.CTkFont(size=18, weight="bold")).pack(pady=10)

        ctk.CTkLabel(
            dialog,
            text=f"–ü—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –ø–∞–ø–∫—É:\n{self.install_dir}",
            text_color="yellow",
            wraplength=500).pack(pady=5)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç—è–º–∏
        path_frame = ctk.CTkFrame(dialog, fg_color="transparent")
        path_frame.pack(pady=5)
        path_frame.grid_columnconfigure((0, 1), weight=1)

        ctk.CTkButton(
            path_frame,
            text="üìÅ –°–º–µ–Ω–∏—Ç—å –ø–∞–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
            fg_color="gray",
            hover_color="#555555",
            width=200,
            command=lambda: (
                self.choose_install_directory(),
                dialog.destroy(),
                self.open_download_dialog())).grid(
            row=0,
            column=0,
            padx=5,
            pady=5)

        ctk.CTkButton(
            path_frame,
            text="üîç –í—ã–±—Ä–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É",
            fg_color="#3498db",
            hover_color="#2980b9",
            width=200,
            command=lambda: (
                self.select_existing_installation(),
                dialog.destroy(),
                self.open_download_dialog())).grid(
            row=0,
            column=1,
            padx=5,
            pady=5)

        # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –≤–µ—Ä—Å–∏–∏
        version_frame = ctk.CTkFrame(dialog)
        version_frame.pack(pady=10, padx=20, fill="x")

        ctk.CTkButton(
            version_frame,
            text="–°–∫–∞—á–∞—Ç—å –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –≤–µ—Ä—Å–∏—é (AntiDetect)",
            command=lambda: (
                self.start_download(DOWNLOAD_URLS["antidetect"]),
                dialog.destroy())).pack(pady=10, padx=20, fill="x")
        ctk.CTkLabel(
            version_frame,
            text="–ù–µ—Ç .exe, –∞–Ω—Ç–∏–≤–∏—Ä—É—Å—ã –Ω–µ —Ä—É–≥–∞—é—Ç—Å—è.",
            text_color="gray").pack()

        ctk.CTkButton(
            version_frame,
            text="–°–∫–∞—á–∞—Ç—å –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é",
            fg_color="gray",
            command=lambda: (
                self.start_download(DOWNLOAD_URLS["standard"]),
                dialog.destroy())).pack(pady=10, padx=20, fill="x")
        ctk.CTkLabel(
            version_frame,
            text="–ï—Å—Ç—å .exe, –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–∂–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞.",
            text_color="gray").pack()

    def start_download(self, url):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
        self.download_button.configure(state="disabled")
        self.progress_bar.set(0)
        threading.Thread(
            target=self.download_and_install, args=(url,), daemon=True).start()

    def download_and_install(self, download_url):
        """–°–∫–∞—á–∏–≤–∞–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Tor Portable"""
        zip_filename = os.path.join(BASE_DIR, "tor_portable_temp.zip")
        try:
            self.status_label.configure(text="–°–∫–∞—á–∏–≤–∞–Ω–∏–µ...")
            self.log(f"–ù–∞—á–∏–Ω–∞—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤: {self.install_dir}")

            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            if not os.path.exists(self.install_dir):
                os.makedirs(self.install_dir)
                self.log(f"–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫—É: {self.install_dir}")

            with requests.get(download_url, stream=True) as r:
                r.raise_for_status()
                total_size = int(r.headers.get('content-length', 0))
                downloaded_size = 0

                with open(zip_filename, 'wb') as f:
                    for chunk in r.iter_content(chunk_size=8192):
                        if chunk:
                            f.write(chunk)
                            downloaded_size += len(chunk)
                            progress = downloaded_size / total_size if total_size > 0 else 0
                            self.progress_bar.set(progress)

            self.status_label.configure(text="–†–∞—Å–ø–∞–∫–æ–≤–∫–∞...")
            self.log("–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—é...")

            with zipfile.ZipFile(zip_filename, 'r') as zip_ref:
                zip_ref.extractall(self.install_dir)

            self.log(f"–£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–æ –≤ '{self.install_dir}'")
            self.log("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

        except Exception as e:
            self.status_label.configure(text="–û—à–∏–±–∫–∞!", text_color="red")
            self.log(f"–û–®–ò–ë–ö–ê: {e}")
        finally:
            if os.path.exists(zip_filename):
                os.remove(zip_filename)
                self.log("–í—Ä–µ–º–µ–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤ —É–¥–∞–ª—ë–Ω.")

            self.check_installation()

    def run_script(self, script_path):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç"""
        if not os.path.exists(script_path):
            self.log(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {script_path}")
            return

        working_directory = os.path.dirname(script_path)
        script_name = os.path.basename(script_path)

        try:
            self.log(f"–ó–∞–ø—É—Å–∫–∞—é {script_name}...")

            # –î–ª—è –∞–ø–¥–µ–π—Ç–µ—Ä–∞ –∑–∞–ø—É—Å–∫–∞–µ–º –∏ —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥–∏–º
            if script_name.lower() in ["updater-win10+.cmd", "updater.cmd"]:
                subprocess.Popen(
                    f'start "Tor Update" cmd /c "{script_path}"',
                    shell=True)
            else:
                # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ - –æ–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫
                subprocess.Popen(
                    f'start "{script_name}" /D "{working_directory}" "{script_path}"',
                    shell=True)

        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {script_name}: {e}")

    def create_main_tab(self):
        """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É"""
        tab = self.tab_view.tab("1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –ó–∞–ø—É—Å–∫")
        tab.grid_columnconfigure(0, weight=1)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–ø–∫–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        self.install_dir_label = ctk.CTkLabel(
            tab,
            text=f"üìç –¢–µ–∫—É—â–∏–π –ø—É—Ç—å: {self.install_dir}",
            text_color="lightblue",
            wraplength=700)
        self.install_dir_label.pack(pady=(10, 10))

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç—è–º–∏
        path_buttons_frame = ctk.CTkFrame(tab, fg_color="transparent")
        path_buttons_frame.pack(pady=5)
        path_buttons_frame.grid_columnconfigure((0, 1), weight=1)

        ctk.CTkButton(
            path_buttons_frame,
            text="üìÅ –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
            fg_color="gray",
            hover_color="#555555",
            command=self.choose_install_directory).grid(
            row=0,
            column=0,
            padx=5,
            pady=5,
            sticky="ew")

        ctk.CTkButton(
            path_buttons_frame,
            text="üîç –£–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É",
            fg_color="#3498db",
            hover_color="#2980b9",
            command=self.select_existing_installation).grid(
            row=0,
            column=1,
            padx=5,
            pady=5,
            sticky="ew")

        self.status_label = ctk.CTkLabel(
            tab, text="", font=ctk.CTkFont(size=20, weight="bold"))
        self.status_label.pack(pady=20)

        ctk.CTkLabel(
            tab,
            text="–î–µ–π—Å—Ç–≤–∏—è —Å Tor Portable",
            font=ctk.CTkFont(size=14, weight="bold")).pack(pady=(10, 0))

        self.download_button = ctk.CTkButton(
            tab,
            text="–°–∫–∞—á–∞—Ç—å –∏ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
            command=self.open_download_dialog,
            height=40)
        self.download_button.pack(pady=5, padx=20, fill="x")

        self.progress_bar = ctk.CTkProgressBar(tab, width=400)
        self.progress_bar.set(0)
        self.progress_bar.pack(pady=(0, 20))

        ctk.CTkLabel(
            tab,
            text="–ó–∞–ø—É—Å–∫ Tor Portable",
            font=ctk.CTkFont(size=14, weight="bold")).pack(pady=(10, 0))

        self.service_manager_button = ctk.CTkButton(
            tab,
            text="–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–∫ –°–ª—É–∂–±—É (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è, –±–µ–∑ –æ–∫–Ω–∞)",
            command=lambda: self.run_script(SERVICE_MANAGER),
            height=40,
            fg_color="#2ecc71",
            hover_color="#27ae60",
            font=ctk.CTkFont(size=14, weight="bold"))
        self.service_manager_button.pack(pady=5, padx=20, fill="x")

        self.launch_browser_button = ctk.CTkButton(
            tab,
            text="–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ (—á–µ—Ä–µ–∑ AntiTor.cmd)",
            command=lambda: self.run_script(LAUNCH_SCRIPT),
            height=40)
        self.launch_browser_button.pack(pady=5, padx=20, fill="x")

        self.open_folder_button = ctk.CTkButton(
            tab,
            text="–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É TorPortable",
            fg_color="gray",
            command=lambda: os.startfile(self.install_dir))
        self.open_folder_button.pack(pady=(20, 5), padx=20, fill="x")

        self.log_textbox = ctk.CTkTextbox(tab, height=150)
        self.log_textbox.pack(pady=10, padx=20, fill="both", expand=True)
        self.log_textbox.configure(state="disabled")

    def create_setup_tab(self):
        """–°–æ–∑–¥–∞–µ—Ç –≤–∫–ª–∞–¥–∫—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞"""
        tab = self.tab_view.tab("2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë—Ä–∞—É–∑–µ—Ä–∞")
        frame = ctk.CTkScrollableFrame(tab)
        frame.pack(fill="both", expand=True, padx=10, pady=10)

        ctk.CTkLabel(
            frame,
            text="–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ ZeroOmega",
            font=ctk.CTkFont(size=16, weight="bold")).pack(
            anchor="w", pady=(0, 10))

        ctk.CTkButton(
            frame,
            text="–î–ª—è Chrome / Edge / Opera",
            command=lambda: webbrowser.open_new_tab(CHROME_ZEROOMEGA_URL)).pack(
            fill="x", pady=5)
        ctk.CTkButton(
            frame,
            text="–î–ª—è Firefox",
            command=lambda: webbrowser.open_new_tab(FIREFOX_ZEROOMEGA_URL)).pack(
            fill="x", pady=5)

        ctk.CTkLabel(
            frame,
            text="–®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ ZeroOmega",
            font=ctk.CTkFont(size=16, weight="bold")).pack(
            anchor="w", pady=(20, 10))

        ctk.CTkLabel(
            frame,
            text='–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è -> Import/Export -> –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤ –ø–æ–ª–µ "Download Profile from URL" -> –Ω–∞–∂–º–∏—Ç–µ Restore.',
            wraplength=700).pack(anchor="w")

        config_frame = ctk.CTkFrame(frame, fg_color="transparent")
        config_frame.pack(fill="x", pady=10)
        config_frame.grid_columnconfigure(0, weight=1)

        config_entry = ctk.CTkEntry(config_frame)
        config_entry.insert(0, ZERO_OMEGA_CONFIG_URL)
        config_entry.configure(state="readonly")
        config_entry.grid(row=0, column=0, sticky="ew")

        ctk.CTkButton(
            config_frame,
            text="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å",
            width=120,
            command=lambda: (
                self.clipboard_clear(),
                self.clipboard_append(ZERO_OMEGA_CONFIG_URL),
                self.log("–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω—Ñ–∏–≥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞."))).grid(
            row=0, column=1, padx=(10, 0))

        ctk.CTkLabel(
            frame,
            text="–®–∞–≥ 3 (–í–∞–∂–Ω–æ!): –ó–∞–∫—Ä–æ–π—Ç–µ —É—Ç–µ—á–∫—É IP –≤ Chrome-–±—Ä–∞—É–∑–µ—Ä–∞—Ö",
            font=ctk.CTkFont(size=16, weight="bold")).pack(
            anchor="w", pady=(20, 10))

        ctk.CTkLabel(
            frame,
            text='–ë—Ä–∞—É–∑–µ—Ä—ã –Ω–∞ –¥–≤–∏–∂–∫–µ Chromium –∏–º–µ—é—Ç —É—è–∑–≤–∏–º–æ—Å—Ç—å WebRTC. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç—Ç–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, —á—Ç–æ–±—ã –µ—ë –∑–∞–∫—Ä—ã—Ç—å.',
            wraplength=700).pack(anchor="w")

        ctk.CTkButton(
            frame,
            text="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WebRTC Control",
            fg_color="#e74c3c",
            hover_color="#c0392b",
            command=lambda: webbrowser.open_new_tab(WEBRTC_CONTROL_URL)).pack(
            fill="x", pady=5)

    def create_tools_tab(self):
        """–°–æ–∑–¥–∞–µ—Ç –≤–∫–ª–∞–¥–∫—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        tab = self.tab_view.tab("3. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
        tab.grid_columnconfigure((0, 1), weight=1)

        # –¢–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∞–ø–¥–µ–π—Ç–µ—Ä
        self.update_button = ctk.CTkButton(
            tab,
            text="–û–±–Ω–æ–≤–∏—Ç—å Tor Portable",
            command=lambda: self.run_script(UPDATER))
        self.update_button.grid(row=0, column=0, padx=10, pady=10, sticky="ew")

        self.mode_button = ctk.CTkButton(
            tab,
            text="–°–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º (Pro/Default)",
            command=lambda: self.run_script(CHANGE_MODE))
        self.mode_button.grid(row=0, column=1, padx=10, pady=10, sticky="ew")

        self.discord_button = ctk.CTkButton(
            tab,
            text="–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç Discord",
            command=lambda: self.run_script(DISCORD_PATCHER))
        self.discord_button.grid(row=1, column=0, padx=10, pady=5, sticky="ew")

        ctk.CTkButton(
            tab,
            text="–°–∫–∞—á–∞—Ç—å Psiphon TM ('–¢–∞—Ä–∞–Ω')",
            fg_color="#f39c12",
            hover_color="#d35400",
            command=lambda: webbrowser.open_new_tab(PSIPHON_URL)).grid(
            row=1, column=1, padx=10, pady=5, sticky="ew")

        ctk.CTkLabel(
            tab,
            text="–ü–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Psiphon TM —Ä–∞—Å–ø–∞–∫—É–π—Ç–µ –µ–≥–æ, –∑–∞–ø—É—Å—Ç–∏—Ç–µ runme.cmd –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º PROXY –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏ ZeroOmega.",
            wraplength=700).grid(
            row=2, column=0, columnspan=2, padx=10, pady=20)

    def create_test_tab(self):
        """–°–æ–∑–¥–∞–µ—Ç –≤–∫–ª–∞–¥–∫—É —Ç–µ—Å—Ç-–¥—Ä–∞–π–≤–∞"""
        tab = self.tab_view.tab("4. –¢–µ—Å—Ç-–¥—Ä–∞–π–≤")
        frame = ctk.CTkScrollableFrame(tab)
        frame.pack(fill="both", expand=True, padx=10, pady=10)

        ctk.CTkLabel(frame, text="–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤—ã–≤–∞–µ–º –í–ï–°–¨ –ò–ù–¢–ï–†–ù–ï–¢ –∏–≥—Ä–∞—é—á–∏!",
                     font=ctk.CTkFont(size=18, weight="bold")).pack(pady=10)

        tests = [
            ("1. –î–æ—Å—Ç—É–ø –≤ Darknet",
             "–ü–æ–∏—Å–∫–æ–≤–∏–∫ DuckDuckGo –≤ —Å–µ—Ç–∏ .onion",
             "https://duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion"),
            ("2. –ë–∞–∑–æ–≤—ã–π –æ–±—Ö–æ–¥ (Habr)",
             "–°—Ç–∞—Ç—å—è –æ VPN, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤ –†–§",
             "https://habr.com/ru/articles/849092/"),
            ("3. –û–±—Ö–æ–¥ –≥–µ–æ–±–ª–æ–∫–∞ (YouTube)",
             "–í–∏–¥–µ–æ, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤ –†–§",
             "https://www.youtube.com/watch?v=-kcOpyM9cBg"),
            ("4. –û–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Tor (YouTube)",
             "–í–∏–¥–µ–æ, –±–ª–æ–∫–∏—Ä—É—é—â–µ–µ –æ–±—ã—á–Ω—ã–π Tor. –ü–æ–º–æ–∂–µ—Ç —Ä–µ–∂–∏–º 'Pro'",
             "https://www.youtube.com/watch?v=W9lsWI7zhTY"),
            ("5. '–§–∏–Ω–∞–ª—å–Ω—ã–π –±–æ—Å—Å' (Grok)",
             "–°–∞–π—Ç —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç–æ–π. –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è Psiphon TM + —Ä–µ–∂–∏–º PROXY",
             "https://grok.com/")]

        for title, desc, url in tests:
            test_frame = ctk.CTkFrame(frame)
            test_frame.pack(fill="x", pady=5)
            test_frame.grid_columnconfigure(0, weight=1)

            ctk.CTkLabel(
                test_frame,
                text=title,
                font=ctk.CTkFont(weight="bold")).grid(
                row=0, column=0, padx=10, pady=(5, 0), sticky="w")
            ctk.CTkLabel(
                test_frame,
                text=desc,
                text_color="gray",
                wraplength=550).grid(
                row=1, column=0, padx=10, pady=(0, 5), sticky="w")
            ctk.CTkButton(
                test_frame,
                text="–û—Ç–∫—Ä—ã—Ç—å",
                width=100,
                command=lambda u=url: webbrowser.open_new_tab(u)).grid(
                row=0, column=1, rowspan=2, padx=10)

    def create_help_tab(self):
        """–°–æ–∑–¥–∞–µ—Ç –≤–∫–ª–∞–¥–∫—É –ø–æ–º–æ—â–∏"""
        tab = self.tab_view.tab("–ü–æ–º–æ—â—å –∏ –°—Å—ã–ª–∫–∏")
        frame = ctk.CTkScrollableFrame(tab)
        frame.pack(fill="both", expand=True, padx=10, pady=10)

        ctk.CTkLabel(
            frame,
            text="–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –∏–∑ –≥–∞–π–¥–∞",
            font=ctk.CTkFont(size=16, weight="bold")).pack(
            anchor="w", pady=(5, 5))

        links_frame = ctk.CTkFrame(frame, fg_color="transparent")
        links_frame.pack(fill="x", pady=5)
        links_frame.grid_columnconfigure((0, 1), weight=1)

        ctk.CTkButton(links_frame, text="–í–∏–¥–µ–æ–≥–∞–π–¥", command=lambda: webbrowser.open_new_tab(
            "https://ipfs.io/ipfs/bafybeicgytyokctpwsuya66yvzwxnjmahexcgisaivcdxszohprygxvzbq/–ù–û–í–´–ô%20–æ–±—Ö–æ–¥%20–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏%20—á–µ—Ä–µ–∑%20—Å–µ—Ä–≤–µ—Ä–∞%20TOR%20ÔΩú%20AntiTor%20%28TorPortable%29%20%5B8HO9jhADip4%5D.webm")).grid(row=0, column=0, padx=5, pady=5, sticky="ew")
        ctk.CTkButton(links_frame, text="–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (GitHub)", command=lambda: webbrowser.open_new_tab(
            "https://github.com/Verity-Freedom/Tor-Portable")).grid(row=0, column=1, padx=5, pady=5, sticky="ew")
        ctk.CTkButton(
            links_frame,
            text="Telegram-–∫–∞–Ω–∞–ª –∞–≤—Ç–æ—Ä–∞",
            command=lambda: webbrowser.open_new_tab("https://t.me/Tor_Portable")).grid(
            row=1, column=0, padx=5, pady=5, sticky="ew")
        ctk.CTkButton(links_frame, text="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞", command=lambda: webbrowser.open_new_tab(
            "https://www.donationalerts.com/r/verity_freedom")).grid(row=1, column=1, padx=5, pady=5, sticky="ew")

        ctk.CTkLabel(
            frame,
            text="–ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è",
            font=ctk.CTkFont(size=16, weight="bold")).pack(
            anchor="w", pady=(20, 10))

        problems = {
            "–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–±–µ–ª—ã –∏–ª–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—É": "–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –ø–∞–ø–∫—É —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –≤ –∫–æ—Ä–µ–Ω—å –¥–∏—Å–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä C:\\TorHelper.",
            "–ê–Ω—Ç–∏–≤–∏—Ä—É—Å —Ä—É–≥–∞–µ—Ç—Å—è –Ω–∞ –≤–∏—Ä—É—Å": "–≠—Ç–æ –ª–æ–∂–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –≤–µ—Ä—Å–∏—é (AntiDetect)'.",
            "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å / –í–∏–¥–µ–æ —Ç–æ—Ä–º–æ–∑–∏—Ç": "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ —Ä–µ–∂–∏–º 'Pro' –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'.",
            "–°–∞–π—Ç –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è": "–°–∫–∞—á–∞–π—Ç–µ Psiphon TM –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã' –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º PROXY –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏.",
            "–ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å": "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ñ–æ–Ω–æ–≤—É—é —Å–ª—É–∂–±—É –∏ —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ Restore –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö ZeroOmega."}

        for problem, solution in problems.items():
            ctk.CTkLabel(
                frame,
                text=f"‚ùì {problem}",
                font=ctk.CTkFont(size=14, weight="bold")).pack(
                anchor="w", pady=(15, 5))
            ctk.CTkLabel(
                frame,
                text=f"üí° {solution}",
                wraplength=700,
                justify="left").pack(anchor="w", padx=15)


if __name__ == "__main__":
    app = App()
    app.mainloop()